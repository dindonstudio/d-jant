import React, {useEffect, useRef} from 'react';

const PerspectiveCard = ({number}) => {
  const cardRef = useRef(null);

  useEffect(() => {
    function perspectiveHover(intensity) {
      const cards = document.querySelectorAll('.js-perspective-card');

      cards.forEach((card) => {
        card.addEventListener('mousemove', function (e) {
          const rect = this.getBoundingClientRect();

          const elX = rect.left + window.scrollX;
          const elY = rect.top + window.scrollY;
          const elWidth = this.offsetWidth;
          const elHeight = this.offsetHeight;

          const mouseX = e.pageX;
          const mouseY = e.pageY;

          const rotateY = -(
            ((elWidth / 2 - (mouseX - elX)) / (elWidth / 2)) *
            intensity
          );
          const rotateX =
            ((elHeight / 2 - (mouseY - elY)) / (elHeight / 2)) * intensity;

          this.style.transform = `rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;
        });

        card.addEventListener('mouseleave', function () {
          this.style.transform = '';
          this.style.transition = ' transform 0.5s ease; ';
        });
      });
    }

    perspectiveHover(12);
  }, []);

  const tickets = Array.from({ length: 1 }, (_, index) => (

        <svg
        key={index}
              version="1.1"
             
              x="0px"
              y="0px"
              height="28px"
  viewBox="0 0 256 191"
  enableBackground="new 0 0 256 256"
  xmlSpace="preserve"
          
            >
              <metadata>
                {' '}
                Svg Vector Icons : http://www.onlinewebfonts.com/icon{' '}
              </metadata>
              <g>
                <g>
                  <path
                    fill="#DB202E"
                    d="M147.8,113.1h-5.3l-14.7,14.7v-14.7H124v29.7h3.9v-10.3l4.8-4.7l10.5,15h5.2l-13-17.7L147.8,113.1z M111.2,138.1c-1.5,1.3-3.4,1.9-5.6,1.9c-1.8,0-3.5-0.5-5-1.4c-1.5-0.9-2.7-2.3-3.4-4.2c-0.7-1.9-1.1-4.1-1.1-6.6c0-2,0.3-3.9,0.9-5.7c0.6-1.9,1.7-3.3,3.2-4.4c1.5-1.1,3.4-1.6,5.7-1.6c2,0,3.6,0.5,4.9,1.5c1.3,1,2.3,2.6,3,4.7l3.9-0.9c-0.8-2.7-2.2-4.9-4.2-6.4c-2-1.5-4.5-2.3-7.5-2.3c-2.6,0-5,0.6-7.2,1.8s-3.9,3-5,5.3c-1.2,2.3-1.8,5-1.8,8.1c0,2.8,0.5,5.5,1.6,8c1,2.5,2.6,4.4,4.6,5.7c2,1.3,4.6,1.9,7.8,1.9c3.1,0,5.7-0.8,7.8-2.6c2.1-1.7,3.6-4.2,4.4-7.4l-3.9-1C113.8,134.9,112.8,136.8,111.2,138.1z M81.4,142.8h3.9v-29.7h-3.9V142.8z M53.8,116.6h9.8v26.2h3.9v-26.2h9.8v-3.5H53.8V116.6L53.8,116.6z M156.7,129.2H173v-3.5h-16.4v-9.1h17.4v-3.5h-21.4v29.7h22.1v-3.5h-18.1L156.7,129.2L156.7,129.2z M210.6,81.1H45.4c-7.8,0-14.1,6.4-14.1,14.2v65.3c0,7.8,6.3,14.2,14.1,14.2h165.2c7.8,0,14.1-6.4,14.1-14.2V95.3C224.7,87.5,218.4,81.1,210.6,81.1z M216.5,160.7c0,3.3-2.6,5.9-5.9,5.9H45.4c-3.3,0-5.9-2.6-5.9-5.9V95.3c0-3.3,2.6-5.9,5.9-5.9h165.2c3.3,0,5.9,2.6,5.9,5.9V160.7z M179.1,116.6h9.8v26.2h3.9v-26.2h9.8v-3.5h-23.5V116.6L179.1,116.6z M243.1,89.4h2.9v-5.9h-5.9c-6.5,0-11.8-5.3-11.8-11.9v-5.9H27.7v5.9c0,6.5-5.3,11.9-11.8,11.9H10v5.9h3c1.6,0,2.9,1.3,2.9,3c0,1.6-1.3,3-2.9,3h-3v5.9h3c1.6,0,2.9,1.3,2.9,3c0,1.6-1.3,3-2.9,3h-3v5.9h3c1.6,0,2.9,1.3,2.9,3c0,1.6-1.3,3-2.9,3h-3v5.9h3c1.6,0,2.9,1.3,2.9,3c0,1.6-1.3,3-2.9,3h-3v6h3c1.6,0,2.9,1.3,2.9,3c0,1.6-1.3,3-2.9,3h-3v5.9h3c1.6,0,2.9,1.3,2.9,3c0,1.6-1.3,3-2.9,3h-3v5.9h3c1.6,0,2.9,1.3,2.9,3c0,1.6-1.3,3-2.9,3h-3v5.9h5.9c6.5,0,11.8,5.3,11.8,11.9v5.9h200.6v-5.9c0-6.5,5.3-11.9,11.8-11.9h5.9v-5.9h-2.9c-1.6,0-3-1.3-3-3c0-1.6,1.3-3,3-3h2.9v-5.9h-2.9c-1.6,0-3-1.3-3-3c0-1.6,1.3-3,3-3h2.9v-5.9h-2.9c-1.6,0-3-1.3-3-3c0-1.6,1.3-3,3-3h2.9V131h-2.9c-1.6,0-3-1.3-3-3c0-1.6,1.3-3,3-3h2.9v-6h-2.9c-1.6,0-3-1.3-3-3s1.3-3,3-3h2.9v-5.9h-2.9c-1.6,0-3-1.3-3-3c0-1.6,1.3-3,3-3h2.9v-5.9h-2.9c-1.6,0-3-1.3-3-3C240.1,90.7,241.4,89.4,243.1,89.4z M233.6,110.2c-1.1,1.7-1.7,3.8-1.7,5.9c0,2.2,0.6,4.2,1.7,5.9c-1.1,1.7-1.7,3.8-1.7,5.9c0,2.2,0.6,4.2,1.7,5.9c-1.1,1.7-1.7,3.8-1.7,5.9c0,2.2,0.6,4.2,1.7,5.9c-1.1,1.7-1.7,3.8-1.7,5.9c0,2.2,0.6,4.2,1.7,5.9c-1.1,1.7-1.7,3.8-1.7,5.9c0,0.8,0.1,1.5,0.2,2.3c-6.4,2.8-11.1,8.9-11.9,16.2H35.7c-0.8-7.2-5.5-13.3-11.9-16.2c0.1-0.7,0.2-1.5,0.2-2.3c0-2.2-0.6-4.2-1.7-5.9c1.1-1.7,1.7-3.8,1.7-5.9c0-2.2-0.6-4.2-1.7-5.9c1.1-1.7,1.7-3.8,1.7-5.9c0-2.2-0.6-4.2-1.7-5.9c1.1-1.7,1.7-3.8,1.7-5.9c0-2.2-0.6-4.2-1.7-5.9c1.1-1.7,1.7-3.8,1.7-5.9c0-2.2-0.6-4.2-1.7-5.9c1.1-1.7,1.7-3.8,1.7-5.9c0-2.2-0.6-4.2-1.7-5.9c1.1-1.7,1.7-3.8,1.7-5.9c0-0.8-0.1-1.5-0.2-2.3c6.4-2.8,11.1-8.9,11.9-16.2h184.6c0.8,7.2,5.5,13.3,11.9,16.2c-0.2,0.7-0.2,1.5-0.2,2.3c0,2.2,0.6,4.2,1.7,5.9c-1.1,1.7-1.7,3.8-1.7,5.9C231.9,106.4,232.6,108.5,233.6,110.2z"
                  />
                </g>
              </g>
            </svg>
        
 
));
  const Shipping = Array.from({ length: 1 }, (_, index) => (

<svg width="38" height="18" viewBox="0 0 32 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fillRule="evenodd" clipRule="evenodd" d="M25.8209 3.82324L21.9745 3.80087V1.33242C21.9745 0.964511 21.8156 0.631406 21.5656 0.392765C21.313 0.151637 20.9666 0 20.5786 0H6.10951C5.72409 0 5.37512 0.151637 5.12512 0.390279C4.87251 0.631406 4.71625 0.962025 4.71625 1.32993C4.71625 1.53377 4.88292 1.69038 5.09387 1.69038C5.30481 1.69038 5.47148 1.53128 5.47148 1.32993C5.47148 1.16338 5.54179 1.00677 5.66159 0.899878C5.77878 0.788015 5.93763 0.718411 6.11212 0.718411H20.5812C20.7557 0.718411 20.9119 0.785529 21.0317 0.899878C21.1489 1.01174 21.2218 1.16338 21.2218 1.32993V12.6406H18.2348C18.0212 12.6406 17.8572 12.7997 17.8572 13.001C17.8572 13.1974 18.0238 13.3615 18.2348 13.3615H21.5968C21.8104 13.3615 21.9745 13.2024 21.9745 13.001V12.5859H24.261C24.4355 8.82229 30.0866 8.30523 30.6622 12.5859H31.907C32.071 11.7506 32.0111 10.7762 31.782 9.70228C31.5163 8.44941 31.5945 8.69303 30.3679 8.24309L27.8678 7.17417L25.8209 3.82324ZM4.79178 7.82049C5.00272 7.82049 5.17199 7.98456 5.17199 8.18343C5.17199 8.38478 5.00011 8.54636 4.79178 8.54636H2.08859C1.87765 8.54636 1.70837 8.38229 1.70837 8.18343C1.70837 7.98207 1.88025 7.82049 2.08859 7.82049H4.79178ZM4.79178 5.44153C5.00272 5.44153 5.17199 5.6056 5.17199 5.80447C5.17199 6.00582 5.00011 6.1674 4.79178 6.1674H1.37243C1.16148 6.1674 0.99221 6.00333 0.99221 5.80447C0.99221 5.60311 1.16409 5.44153 1.37243 5.44153H4.79178ZM4.79178 3.06257C5.00272 3.06257 5.17199 3.22664 5.17199 3.4255C5.17199 3.62686 5.00011 3.78844 4.79178 3.78844H0.380217C0.171879 3.79092 0 3.62686 0 3.42799C0 3.22664 0.171879 3.06506 0.380217 3.06506H4.79178V3.06257ZM16.9457 2.98302H19.4405V4.03702H18.4431V5.04628H19.3754V6.04808H18.4431V7.20897H19.5421V8.26297H16.9457V2.98302ZM13.7946 2.98302H16.2894V4.03702H15.292V5.04628H16.2243V6.04808H15.292V7.20897H16.391V8.26297H13.7946V2.98302ZM9.75022 2.98302H10.8075C11.5133 2.98302 11.9899 3.00788 12.2399 3.0576C12.4899 3.10732 12.693 3.23658 12.8519 3.44042C13.0107 3.64426 13.0888 3.97239 13.0888 4.42233C13.0888 4.8325 13.0342 5.10843 12.9222 5.25012C12.8128 5.39181 12.5914 5.47633 12.2659 5.50368C12.5628 5.57079 12.7607 5.66277 12.8623 5.77463C12.9638 5.8865 13.0263 5.9909 13.0524 6.08537C13.0784 6.17983 13.0888 6.44084 13.0888 6.86592V8.26049H11.7008V6.50299C11.7008 6.2196 11.6773 6.04559 11.6279 5.97847C11.581 5.91136 11.4534 5.87655 11.2503 5.87655V8.26049H9.75283V2.98302H9.75022ZM11.2477 3.88539V5.0612C11.4143 5.0612 11.5315 5.04131 11.5992 4.99656C11.6669 4.9543 11.7008 4.8151 11.7008 4.58391V4.29307C11.7008 4.12403 11.6669 4.01465 11.6044 3.96245C11.5367 3.91025 11.4195 3.88539 11.2477 3.88539ZM6.72672 2.98302H9.25802V4.03702H8.22415V5.04628H9.14083V6.04808H8.22415V8.26546H6.72672V2.98302ZM10.4456 12.643C10.6513 12.643 10.8232 12.8021 10.8232 13.0035C10.8232 13.1999 10.6565 13.3639 10.4456 13.3639H6.11733C5.7319 13.3639 5.38293 13.2048 5.13293 12.9587C4.88032 12.7102 4.72407 12.3646 4.72407 12.0042V10.5599C4.72407 10.3635 4.89074 10.1995 5.10168 10.1995C5.31523 10.1995 5.47929 10.3585 5.47929 10.5599V12.0042C5.47929 12.1782 5.55742 12.3423 5.67721 12.4641C5.7944 12.5759 5.94545 12.653 6.11993 12.653L10.4456 12.643ZM14.292 10.279C12.8727 10.279 11.7294 11.3777 11.7294 12.7251C11.7294 14.0799 12.8805 15.1712 14.292 15.1712C15.7113 15.1712 16.8546 14.0724 16.8546 12.7251C16.8546 11.3703 15.7035 10.279 14.292 10.279ZM14.292 11.7854C13.7477 11.7854 13.3076 12.208 13.3076 12.7251C13.3076 13.2446 13.7503 13.6647 14.292 13.6647C14.8363 13.6647 15.2764 13.2421 15.2764 12.7251C15.279 12.2055 14.8363 11.7854 14.292 11.7854ZM27.4616 10.279C26.0423 10.279 24.899 11.3777 24.899 12.7251C24.899 14.0799 26.0501 15.1712 27.4616 15.1712C28.8809 15.1712 30.0241 14.0724 30.0241 12.7251C30.0241 11.3703 28.8731 10.279 27.4616 10.279ZM27.4616 11.7854C26.9173 11.7854 26.4772 12.208 26.4772 12.7251C26.4772 13.2446 26.9199 13.6647 27.4616 13.6647C28.0058 13.6647 28.446 13.2421 28.446 12.7251C28.446 12.2055 28.0058 11.7854 27.4616 11.7854ZM24.8365 4.85487L22.9276 4.8325V7.17914H26.1282L24.8365 4.85487Z" fill="#4C9800"/>
</svg>


        
 
));
  return (
    <div ref={cardRef} className="js-perspective absolute -top-1 -right-8 z-20">
      <div className="perspective-card-wrap">
        <div className="js-perspective-card perspective-card">
          <div className="perspective-card__content flex justify-center flex-row gap-4">
            <div className='flex borderRed red gap-1 px-2'>
              <div className='text-2xl relative top-2'>
              {number}X
              </div>
           
          {tickets}
            </div>
  <div className='borderGreen px-2 flex items-center justify-center py-1'>
  {Shipping}
  </div>

          </div>
        </div>
      </div>
    </div>
  );
};

export default PerspectiveCard;
